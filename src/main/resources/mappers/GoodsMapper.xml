<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dangerous_goods.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.example.dangerous_goods.entity.Goods" >
    <id column="goods_id" property="goodsId" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="application_time" property="applicationTime" jdbcType="TIMESTAMP" />
    <result column="charge_phone" property="chargePhone" jdbcType="VARCHAR" />
    <result column="charge_name" property="chargeName" jdbcType="VARCHAR" />
    <result column="agent_phone" property="agentPhone" jdbcType="VARCHAR" />
    <result column="agent_name" property="agentName" jdbcType="VARCHAR" />
    <result column="overdue_status" property="overdueStatus" jdbcType="INTEGER" />
    <result column="verify_status" property="verifyStatus" jdbcType="INTEGER" />
    <result column="shelf_number" property="shelfNumber" jdbcType="VARCHAR" />
    <result column="take_out_status" property="takeOutStatus" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.dangerous_goods.entity.Goods" >
    insert into goods (goods_id, college, application_time, 
      charge_phone, charge_name, agent_phone, 
      agent_name, overdue_status, verify_status, 
      shelf_number, take_out_status)
    values (#{goodsId,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{applicationTime,jdbcType=TIMESTAMP}, 
      #{chargePhone,jdbcType=VARCHAR}, #{chargeName,jdbcType=VARCHAR}, #{agentPhone,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{overdueStatus,jdbcType=INTEGER}, #{verifyStatus,jdbcType=INTEGER}, 
      #{shelfNumber,jdbcType=VARCHAR}, #{takeOutStatus,jdbcType=INTEGER})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into goods (goods_id, college, application_time,
      charge_phone, charge_name, agent_phone,
      agent_name, overdue_status, verify_status,
      shelf_number, take_out_status)
    values
    <foreach collection="list" item="item" separator=",">
    (#{item.goodsId}, #{item.college}, #{item.applicationTime},
      #{item.chargePhone}, #{item.chargeName}, #{item.agentPhone},
      #{item.agentName}, #{item.overdueStatus}, #{item.verifyStatus},
      #{item.shelfNumber}, #{item.takeOutStatus})
    </foreach>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.dangerous_goods.entity.Goods" >
    update goods
    set college = #{college,jdbcType=VARCHAR},
      application_time = #{applicationTime,jdbcType=TIMESTAMP},
      charge_phone = #{chargePhone,jdbcType=VARCHAR},
      charge_name = #{chargeName,jdbcType=VARCHAR},
      agent_phone = #{agentPhone,jdbcType=VARCHAR},
      agent_name = #{agentName,jdbcType=VARCHAR},
      overdue_status = #{overdueStatus,jdbcType=INTEGER},
      verify_status = #{verifyStatus,jdbcType=INTEGER},
      shelf_number = #{shelfNumber,jdbcType=VARCHAR},
      take_out_status = #{takeOutStatus,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone, 
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </select>
  <select id="selectByChargeNameAndTakeOutStatus" resultMap="BaseResultMap" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where charge_name = #{chargeName,jdbcType=VARCHAR}
    and take_out_status = 0
    order by application_time desc
  </select>
  <select id="selectByChargeName" resultMap="BaseResultMap" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where charge_name = #{chargeName,jdbcType=VARCHAR} and take_out_status = 0
  </select>
  <select id="selectByChargeNameAndVerifyStatus" resultMap="BaseResultMap" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where charge_name = #{chargeName,jdbcType=VARCHAR} and verify_status = #{verifyStatus,jdbcType=INTEGER} and take_out_status = 0
  </select>
  <select id="selectReviewed" resultMap="BaseResultMap" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where charge_name = #{teacherName,jdbcType=VARCHAR} and (verify_status = 1 or verify_status = 2) and take_out_status = 0
  </select>
  <select id="selectByVerifyStatus" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where verify_status = #{verifyStatus,jdbcType=INTEGER} and take_out_status = 0
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone, 
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods where take_out_status = 0
  </select>
  <select id="selectByTakeOutStatus" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where take_out_status = #{takeOutStatus,jdbcType=INTEGER}
  </select>
  <select id="selectByOverdueStatus" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where overdue_status = #{overdueStatus,jdbcType=INTEGER} and take_out_status = 0
  </select>
  <select id="selectByStudentName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select goods_id, college, application_time, charge_phone, charge_name, agent_phone,
    agent_name, overdue_status, verify_status, shelf_number, take_out_status
    from goods
    where agent_name = #{studentName,jdbcType=VARCHAR} and take_out_status = 0
  </select>
</mapper>